#!/bin/bash
# üì¶ –ü–æ–ª–Ω–∞—è —Ñ–∞–∑–æ–≤–∞—è –º–∏–≥—Ä–∞—Ü–∏—è + –≥–µ–Ω–µ—Ä–∞—Ü–∏—è README + arca-phase.yml + SVG-–∫–∞—Ä—Ç–∞

SRC="$HOME/ResLang/ArcaLang/XerxFav-ResLangCore"
DST="$HOME/ResLang/ArcaLang"
DATE=$(date +"%Y-%m-%d")

echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–∑–æ–≤—ã—Ö –∫–∞—Ç–∞–ª–æ–≥–æ–≤..."
mkdir -p "$DST/phases/stabilization"
mkdir -p "$DST/phases/field"
mkdir -p "$DST/phases/interpreter"
mkdir -p "$DST/phases/memory"
mkdir -p "$DST/docs/spec"
mkdir -p "$DST/docs/legacy"
mkdir -p "$DST/docs/ci"
mkdir -p "$DST/scripts/ci"
mkdir -p "$DST/tests/stabilization"

echo "üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π —è–¥—Ä–∞ ‚Üí stabilization"
cp "$SRC/arca_core/"*.py "$DST/phases/stabilization/"
echo "üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è README ‚Üí stabilization"
cat <<EOF > "$DST/phases/stabilization/README.md"
# –§–∞–∑–∞: stabilization
declare -A PHASES
PHASES[stabilization]="origin"
PHASES[field]="stabilization"
PHASES[interpreter]="field"
PHASES[memory]="interpreter"



echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–∑–æ–≤—ã—Ö –∫–∞—Ç–∞–ª–æ–≥–æ–≤..."
for PHASE in "${!PHASES[@]}"; do
  mkdir -p "$DST/phases/$PHASE"
done

mkdir -p "$DST/docs/spec" "$DST/docs/legacy" "$DST/docs/ci"
mkdir -p "$DST/scripts/ci" "$DST/tests/stabilization"

echo "üìÅ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è README + arca-phase.yml..."
for PHASE in "${!PHASES[@]}"; do
  case $PHASE in
    stabilization) cp "$SRC/arca_core/"*.py "$DST/phases/$PHASE/" ;;
    field) cp "$SRC/arca_fieldcore/"*.py "$DST/phases/$PHASE/" ;;
    interpreter) cp "$SRC/arca_interpreter/"*.py "$DST/phases/$PHASE/" ;;
    memory) cp "$SRC/arca_memory/"*.py "$DST/phases/$PHASE/" ;;
  esac

  echo "üìù README ‚Üí $PHASE"
  cat <<EOF > "$DST/phases/$PHASE/README.md"
# –§–∞–∑–∞: $PHASE

**–ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ**: –ú–æ–¥—É–ª–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –∏–∑ \`XerxFav-ResLangCore/$PHASE\`  
**–î–∞—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–∏**: $DATE  
**–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ  
**–§–∏–∫—Å–∞—Ü–∏—è**: phase=$PHASE, evolves_from=${PHASES[$PHASE]}
EOF

  echo "üìÑ arca-phase.yml ‚Üí $PHASE"
  cat <<EOF > "$DST/phases/$PHASE/arca-phase.yml"
phase:
  name: $PHASE
  desc: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∏–≥—Ä–∞—Ü–∏–∏ $DATE
  tags: [migrated, $PHASE]
  evolves_from: ${PHASES[$PHASE]}
  pushed: true
EOF
done

echo "üìÑ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π ‚Üí docs/spec"
cp "$SRC/arca_lang_spec.md" "$DST/docs/spec/"
cp "$SRC/specification.md" "$DST/docs/spec/"
cp "$SRC/ontology.md" "$DST/docs/spec/"

echo "üìÑ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –æ–ø–∏—Å–∞–Ω–∏–π ‚Üí docs/legacy"
cp "$SRC/"*.txt "$DST/docs/legacy/"
cp "$SRC/README.md" "$DST/docs/legacy/"
cp "$SRC/LICENSE" "$DST/docs/legacy/"

echo "üó∫Ô∏è –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ SVG –∏ Makefile ‚Üí docs/ci"
cp "$SRC/docs/ci_phase_map.svg" "$DST/docs/ci/"
cp "$SRC/docs/Makefile" "$DST/docs/ci/"
cp "$SRC/docs/make.bat" "$DST/docs/ci/"

echo "üß™ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ ‚Üí tests/stabilization"
cp "$SRC/tests/"test_*.py "$DST/tests/stabilization/"

echo "‚öôÔ∏è –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ CI-—Å–∫—Ä–∏–ø—Ç–æ–≤ ‚Üí scripts/ci"
cp "$SRC/scripts/"*.py "$DST/scripts/ci/"
cp "$SRC/scripts/"*.dot "$DST/scripts/ci/"

echo "üó∫Ô∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SVG-–∫–∞—Ä—Ç—ã —Ñ–∞–∑ ‚Üí docs/ci/arca_phase_map.svg"
python3 - <<EOF
import graphviz

phases = ${!PHASES[@]}
edges = ${PHASES[@]}

dot = graphviz.Digraph(comment="Arca Phase Map")
for phase in phases:
    dot.node(phase)
for phase, parent in ${PHASES[@]@Q}; do
    dot.edge(parent, phase, label="evolves_from")
dot.render("$DST/docs/ci/arca_phase_map", format="svg")
EOF

echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. README, arca-phase.yml –∏ SVG-–∫–∞—Ä—Ç–∞ —Å–æ–∑–¥–∞–Ω—ã."

echo "üßæ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–∑–æ–≤–æ–≥–æ CI-–æ—Ç—á—ë—Ç–∞ ‚Üí docs/ci/phase_index.md"
REPORT="$DST/docs/ci/phase_index.md"
echo "# üß≠ ArcaLang: –§–∞–∑–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å" > "$REPORT"
echo "**–î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏**: $DATE" >> "$REPORT"
echo "" >> "$REPORT"

for PHASE in "${!PHASES[@]}"; do
  DESC=$(grep 'desc:' "$DST/phases/$PHASE/arca-phase.yml" | sed 's/desc: //')
  echo "## üîπ –§–∞–∑–∞: \`$PHASE\`" >> "$REPORT"
  echo "- **–ü—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ**: \`XerxFav-ResLangCore/$PHASE\`" >> "$REPORT"
  echo "- **evolves_from**: \`${PHASES[$PHASE]}\`" >> "$REPORT"
  echo "- **–û–ø–∏—Å–∞–Ω–∏–µ**: $DESC" >> "$REPORT"
  echo "- **README**: [phases/$PHASE/README.md](../../phases/$PHASE/README.md)" >> "$REPORT"
  echo "" >> "$REPORT"
done

echo "‚úÖ CI-–æ—Ç—á—ë—Ç —Å–æ–∑–¥–∞–Ω: docs/ci/phase_index.md"
