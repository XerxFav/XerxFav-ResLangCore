#!/usr/bin/env python3
import os
from datetime import datetime

README_PATH = "README.md"
PHASES = {
    "arca_core": "–ë–∞–∑–æ–≤—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã, —Ç–∏–ø—ã –∏ —Ñ–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å",
    "arca_logic": "–¢–µ—Ä–Ω–∞—Ä–Ω–∞—è –ª–æ–≥–∏–∫–∞, –ø—Ä–∞–≤–∏–ª–∞ –≤—ã–≤–æ–¥–∞ –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏",
    "arca_vm": "–í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞, –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∞–∑–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π"
}

def generate_phase_map():
    lines = ["## üß≠ –§–∞–∑–æ–≤–∞—è –∫–∞—Ä—Ç–∞ ArcaLang\n"]
    for name, desc in PHASES.items():
        lines.append(f"- **{name}** ‚Äî {desc}")
    return "\n".join(lines)

def generate_make_targets():
    lines = ["## ‚öôÔ∏è –¶–µ–ª–∏ Makefile\n"]
    targets = [
        "install", "test", "phase-build", "audit", "report",
        "ci", "docs", "verify-commits", "generate-make-phase", "update-readme"
    ]
    for t in targets:
        lines.append(f"- `make {t}` ‚Äî {describe_target(t)}")
    return "\n".join(lines)

def describe_target(t):
    return {
        "install": "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π",
        "test": "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤",
        "phase-build": "–°–±–æ—Ä–∫–∞ —Ñ–∞–∑–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤",
        "audit": "–§–∞–∑–æ–≤—ã–π –∞—É–¥–∏—Ç –∏ diff_report.md",
        "report": "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è phase_report.md –∏ SVG",
        "ci": "–ü–æ–ª–Ω—ã–π CI-–ø—Ä–æ—Ö–æ–¥",
        "docs": "–°–±–æ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏",
        "verify-commits": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–∑–æ–≤—ã—Ö –º–µ—Ç–æ–∫",
        "generate-make-phase": "–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ü–µ–ª–µ–π Makefile",
        "update-readme": "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ README –∏ phase_report"
    }.get(t, "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

def main():
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M")
    with open(README_PATH, "a") as f:
        f.write(f"\n---\n\nüìÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {timestamp}\n\n")
        f.write(generate_phase_map())
        f.write("\n\n")
        f.write(generate_make_targets())
        f.write("\n")

if __name__ == "__main__":
    main()
