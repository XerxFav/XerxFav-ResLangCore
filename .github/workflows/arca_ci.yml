name: ArcaLang Phase-Space CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ðŸ§¬ Quantum Phase
  quantum-core:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run chronotope tests
        run: pytest tests/test_chronotope.py --cov=arca_core

  quantum-interpreter:
    needs: quantum-core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run evaluator tests
        run: pytest tests/test_evaluator.py --cov=arca_interpreter

  # ðŸ”¢ Logical Phase
  logical-core:
    needs: quantum-interpreter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run phase logic tests
        run: pytest tests/test_phase.py --cov=arca_core

  logical-fieldcore:
    needs: logical-core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run schema tests
        run: pytest tests/test_schema.py --cov=arca_fieldcore
      - name: Generate fieldmap
        run: python arca_fieldcore/fieldmap.py

  # ðŸ§© Ontological Phase
  ontological:
    needs: logical-fieldcore
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install sphinx
      - name: Generate ontology
        run: python arca_fieldcore/generate_ontology.py
      - name: Validate ontology
        run: |
          grep "## Ontological Model" ontology.md || echo "Missing Ontological Model"
          grep "## Modules" ontology.md || echo "Missing Modules Section"
      - name: Build Sphinx docs
        run: |
          cp ontology.md docs/
          cp ci_phase_report.md docs/ || echo "Report not yet generated"
          cd docs
          make html

  # ðŸ“¦ Memory Phase
  memory:
    needs: ontological
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run memory tests
        run: pytest tests/test_storage.py --cov=arca_memory

  # ðŸ“œ Documentation Phase
  docs-update:
    needs: memory
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Graphviz
        run: sudo apt-get update && sudo apt-get install -y graphviz
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Generate docs and CI report
        run: python scripts/generate_docs.py
      - name: Commit updates
        run: |
          git config --global user.name "ArcaBot"
          git config --global user.email "arca@users.noreply.github.com"
          git add README.md docs/ci_phase_report.md docs/source/_static/ci_phase_map.svg
          git commit -m "ðŸ“œ Update README, CI report, and phase map" || echo "No changes"
          git push
