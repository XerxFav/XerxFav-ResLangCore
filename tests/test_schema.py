#üîπ tests/test_schema.py ‚Äî –ø–æ–∫—Ä—ã—Ç–∏–µ —Ñ–∞–∑–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª

# test_schema.py ‚Äî —Ç–µ—Å—Ç—ã –¥–ª—è —Ñ–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
#–î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏—é:
import pytest

@pytest.mark.parametrize("from_phase,to_phase,expected", [
    ("neutral", "positive", True),
    ("positive", "neutral", True),
    ("negative", "positive", True),
    ("positive", "undefined", False),
    ("neutral", "neutral", False),
])
def test_phase_transitions(from_phase, to_phase, expected):
    assert schema.is_valid_transition(from_phase, to_phase) == expected#üìå –≠—Ç–æ –¥–µ–ª–∞–µ—Ç —Ç–µ—Å—Ç –∫–æ–º–ø–∞–∫—Ç–Ω—ã–º –∏ —Ä–∞—Å—à–∏—Ä—è–µ–º—ã–º.

from arca_fieldcore import schema
üîπ –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–∑–æ–≤—É—é –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É:
@pytest.mark.phase
def test_valid_transitions():
    ...#üìå –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å —Ñ–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã –æ—Ç–¥–µ–ª—å–Ω–æ: pytest -m phase

def test_valid_transitions():
    assert schema.is_valid_transition("neutral", "positive")
    assert schema.is_valid_transition("positive", "neutral")
    assert schema.is_valid_transition("negative", "positive")

def test_invalid_transition():
    assert not schema.is_valid_transition("positive", "undefined")
    assert not schema.is_valid_transition("neutral", "neutral")
#üìå –ú–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏–µ–π –∏ —Ñ–∞–∑–æ–≤—ã–º–∏ –º–∞—Ä–∫–µ—Ä–∞–º–∏.

#–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ test_schema.py —Ç–æ—á–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–∑–æ–≤—É—é –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É:
    - name: Run schema tests
      run: |
        pytest tests/test_schema.py --cov=arca_fieldcore --cov-report=term
